{"id":"index.js","dependencies":[{"name":"F:\\Internet\\kafelki\\package.json","includedInParent":true,"mtime":1580591600773}],"generated":{"js":"// DO ZROBIENIA\n\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\n// import cssVariables from './varaibles_from_css';\n// import randomNumbers from './random_numbers';\n// const numbersOfTiles = 20;\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\n// \tgenerateTiles(numbersOfTiles);\n// }\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\n// \tDOMTilesContainer.classList.add('four-columns');\n// \tgenerateTiles(numbersOfTiles);\n// }\n// class Tile {\n// \tconstructor(lightColor, shadowColor, isClicked) {\n// \t\tthis.lightColor = lightColor;\n// \t\tthis.shadowColor = shadowColor;\n// \t\tthis.isClicked = isClicked;\n// \t}\n// }\n// const cssVariablesColors = {};\n// let tilesColorsValues = [];\n// const allTiles = {};\n// let j = 0;\n// for (let i = 0; i < cssVariables.length; i++) {\n// \tlet keyValuePairs = cssVariables[i].split(':');\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\n// \tif (keyValuePairs[0] !== '') {\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\n// \t}\n// }\n// const hexColorsNames = Object.keys(cssVariablesColors);\n// for (let i = 0; i < cssVariables.length / 2; i++) {\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\n// \tallTiles[colorName] = new Tile(\n// \t\ttilesColorsValues[j],\n// \t\ttilesColorsValues[j + 1],\n// \t\tfalse,\n// \t);\n// \tj += 2;\n// }\n// const removeColorsFromTiles = () => {\n// \tsetTimeout(() => {\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\n// \t\t}\n// \t}, 2000);\n// };\n// j = 0;\n// for (let i = 0; i < DOMTiles.length; i++) {\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\n// \tj++;\n// \tif (j > 5) {\n// \t\tj = 0;\n// \t}\n// }\n// removeColorsFromTiles();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":16,"column":0}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":17,"column":0}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":19,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":20,"column":0}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":22,"column":0}},{"generated":{"line":20,"column":0},"source":"index.js","original":{"line":24,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":25,"column":0}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":26,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":27,"column":0}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":28,"column":0}},{"generated":{"line":25,"column":0},"source":"index.js","original":{"line":29,"column":0}},{"generated":{"line":26,"column":0},"source":"index.js","original":{"line":30,"column":0}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":32,"column":0}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":33,"column":0}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":34,"column":0}},{"generated":{"line":30,"column":0},"source":"index.js","original":{"line":35,"column":0}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":37,"column":0}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":39,"column":0}},{"generated":{"line":34,"column":0},"source":"index.js","original":{"line":40,"column":0}},{"generated":{"line":35,"column":0},"source":"index.js","original":{"line":41,"column":0}},{"generated":{"line":36,"column":0},"source":"index.js","original":{"line":42,"column":0}},{"generated":{"line":37,"column":0},"source":"index.js","original":{"line":43,"column":0}},{"generated":{"line":38,"column":0},"source":"index.js","original":{"line":45,"column":0}},{"generated":{"line":39,"column":0},"source":"index.js","original":{"line":47,"column":0}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":48,"column":0}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":49,"column":0}},{"generated":{"line":42,"column":0},"source":"index.js","original":{"line":50,"column":0}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":51,"column":0}},{"generated":{"line":44,"column":0},"source":"index.js","original":{"line":52,"column":0}},{"generated":{"line":45,"column":0},"source":"index.js","original":{"line":53,"column":0}},{"generated":{"line":46,"column":0},"source":"index.js","original":{"line":54,"column":0}},{"generated":{"line":47,"column":0},"source":"index.js","original":{"line":55,"column":0}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":57,"column":0}},{"generated":{"line":49,"column":0},"source":"index.js","original":{"line":58,"column":0}},{"generated":{"line":50,"column":0},"source":"index.js","original":{"line":59,"column":0}},{"generated":{"line":51,"column":0},"source":"index.js","original":{"line":60,"column":0}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":61,"column":0}},{"generated":{"line":53,"column":0},"source":"index.js","original":{"line":62,"column":0}},{"generated":{"line":54,"column":0},"source":"index.js","original":{"line":63,"column":0}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":65,"column":0}},{"generated":{"line":56,"column":0},"source":"index.js","original":{"line":66,"column":0}},{"generated":{"line":57,"column":0},"source":"index.js","original":{"line":67,"column":0}},{"generated":{"line":58,"column":0},"source":"index.js","original":{"line":68,"column":0}},{"generated":{"line":59,"column":0},"source":"index.js","original":{"line":69,"column":0}},{"generated":{"line":60,"column":0},"source":"index.js","original":{"line":70,"column":0}},{"generated":{"line":61,"column":0},"source":"index.js","original":{"line":71,"column":0}},{"generated":{"line":62,"column":0},"source":"index.js","original":{"line":72,"column":0}},{"generated":{"line":63,"column":0},"source":"index.js","original":{"line":74,"column":0}}],"sources":{"index.js":"// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\r\n\r\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\r\n// import cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\n// const numbersOfTiles = 20;\r\n\r\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n// \tDOMTilesContainer.classList.add('four-columns');\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"},"lineCount":null}},"error":null,"hash":"906d0a3d68191dbd2a1093cd9105f389","cacheData":{"env":{}}}