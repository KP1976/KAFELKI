{"version":3,"sources":["change-theme-color-mode.js","generate-tiles.js","change-board-dimension.js","create-array-of-double-colors.js","generate-random-index-numbers.js","generate-random-tiles-colors.js","click-tile.js","start-game.js","index.js"],"names":["changeThemeColorMode","HTMLTag","document","documentElement","switchButton","querySelector","addEventListener","e","target","checked","dataset","colormode","generateTiles","rows","columns","container","tileClassName","i","tile","createElement","classList","add","appendChild","changeBoardDimension","radioButtonInputs","querySelectorAll","tilesContainer","tilesGrid","forEach","radioButtonInput","event","nextElementSibling","textContent","split","innerHTML","gridRows","gridColumns","createArrayOfDoubleColors","tilesColors","numberOfTiles","colorsOfTiles","availableTileColors","j","generateRandomIndexNumbers","randomIndexNumbers","Set","size","Math","floor","random","shuffleTilesColors","generateRandomTilesColors","tiles","index","clickTile","startTime","gameScore","topBar","mainContainer","activeTile","pairsActiveTiles","correctAnswers","setTimeout","className","clickTileHandler","Date","getTime","indexOf","length","removeEventListener","attributes","value","singleActiveTile","correctAnswerSign","endTime","remove","insertAdjacentHTML","toFixed","startGame","startButton","getAttribute"],"mappings":"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","file":"src.18fc7ba6.js","sourceRoot":"..\\src","sourcesContent":["const HTMLTag = document.documentElement;\r\nconst switchButton = document.querySelector('.switch-mode-container__switch');\r\n\r\nconst changeThemeColorMode = () => {\r\n\tswitchButton.addEventListener('change', (e) => {\r\n\t\tif (e.target.checked) {\r\n\t\t\tHTMLTag.dataset.colormode = 'light';\r\n\t\t} else {\r\n\t\t\tHTMLTag.dataset.colormode = 'dark';\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default changeThemeColorMode;\r\n","const generateTiles = (rows, columns, container, tileClassName) => {\r\n\tfor (let i = 0; i < rows * columns; i++) {\r\n\t\tconst tile = document.createElement('li');\r\n\t\ttile.classList.add(tileClassName);\r\n\t\tcontainer.appendChild(tile);\r\n\t}\r\n};\r\n\r\nexport default generateTiles;\r\n","import generateTiles from './generate-tiles';\r\n\r\nconst radioButtonInputs = document.querySelectorAll(\r\n\t'.radios-container__radio-input',\r\n);\r\nconst tilesContainer = document.querySelector('.tiles-container');\r\nconst tilesGrid = document.querySelector('.tiles-grid');\r\n\r\nconst changeBoardDimension = () => {\r\n\tradioButtonInputs.forEach((radioButtonInput) => {\r\n\t\tradioButtonInput.addEventListener('change', () => {\r\n\t\t\tconst [rows, columns] = event.target.nextElementSibling.textContent.split(\r\n\t\t\t\t'x',\r\n\t\t\t);\r\n\r\n\t\t\t// Usuwanie wszystkich kafelków i ustawienie odpowiedniego grida dla kontenera\r\n\t\t\t// (zarówno na stronie początkowej jak i w grze)\r\n\t\t\ttilesGrid.innerHTML = '';\r\n\t\t\ttilesGrid.dataset.gridRows = rows;\r\n\t\t\ttilesGrid.dataset.gridColumns = columns;\r\n\r\n\t\t\ttilesContainer.dataset.gridRows = rows;\r\n\t\t\ttilesContainer.dataset.gridColumns = columns;\r\n\r\n\t\t\tgenerateTiles(+rows, +columns, tilesGrid, 'tiles-grid__tile');\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport default changeBoardDimension;\r\n","const tilesColors = [\r\n\t'black',\r\n\t'purple',\r\n\t'light-blue',\r\n\t'orange',\r\n\t'red',\r\n\t'blue',\r\n\t'green',\r\n\t'yellow',\r\n\t'pink',\r\n\t'brown',\r\n];\r\n\r\nconst createArrayOfDoubleColors = (numberOfTiles) => {\r\n\tconst colorsOfTiles = [];\r\n\tconst availableTileColors = numberOfTiles / 2;\r\n\tlet j = 0;\r\n\r\n\tfor (let i = 0; i < numberOfTiles; i++) {\r\n\t\tcolorsOfTiles[i] = tilesColors[j];\r\n\t\tj++;\r\n\t\tif (j > availableTileColors - 1) {\r\n\t\t\tj = 0;\r\n\t\t}\r\n\t}\r\n\r\n\treturn colorsOfTiles;\r\n};\r\n\r\nexport default createArrayOfDoubleColors;\r\n","const generateRandomIndexNumbers = (numberOfTiles) => {\r\n\tconst randomIndexNumbers = new Set();\r\n\tif (numberOfTiles) {\r\n\t\twhile (randomIndexNumbers.size !== numberOfTiles) {\r\n\t\t\trandomIndexNumbers.add(Math.floor(Math.random() * numberOfTiles));\r\n\t\t}\r\n\t}\r\n\treturn randomIndexNumbers;\r\n};\r\n\r\nexport default generateRandomIndexNumbers;\r\n","import createArrayOfDoubleColors from './create-array-of-double-colors';\r\nimport generateRandomIndexNumbers from './generate-random-index-numbers';\r\n\r\nlet randomIndexNumbers = [];\r\nconst shuffleTilesColors = [];\r\n\r\nconst generateRandomTilesColors = (numberOfTiles) => {\r\n\tconst colorsOfTiles = createArrayOfDoubleColors(numberOfTiles);\r\n\tconst tiles = document.querySelectorAll('.tiles-container__tile');\r\n\r\n\trandomIndexNumbers = [...generateRandomIndexNumbers(numberOfTiles)];\r\n\r\n\tfor (let i = 0; i < numberOfTiles; i++) {\r\n\t\tshuffleTilesColors[i] = colorsOfTiles[randomIndexNumbers[i]];\r\n\t}\r\n\r\n\ttiles.forEach((tile, index) =>\r\n\t\ttile.classList.add(`${shuffleTilesColors[index]}`),\r\n\t);\r\n\r\n\treturn tiles;\r\n};\r\n\r\nexport { generateRandomTilesColors, shuffleTilesColors };\r\n","import { shuffleTilesColors } from './generate-random-tiles-colors';\r\n\r\nconst topBar = document.querySelector('.top-bar');\r\nconst tilesContainer = document.querySelector('.tiles-container');\r\nconst mainContainer = document.querySelector('.container');\r\n\r\nlet startTime;\r\nlet activeTile = '';\r\nlet pairsActiveTiles = [];\r\nlet correctAnswers = 0;\r\nlet gameScore;\r\n\r\nconst clickTile = (tiles) => {\r\n\t// Usuwa po 2,5 sekundach kolory z kafelków i ustawia event listenery na każdy kafelek\r\n\tsetTimeout(() => {\r\n\t\ttiles.forEach((tile) => {\r\n\t\t\ttile.className = 'tiles-container__tile';\r\n\t\t\ttile.addEventListener('click', clickTileHandler);\r\n\t\t});\r\n\r\n\t\tstartTime = new Date().getTime();\r\n\t}, 2500);\r\n};\r\n\r\nconst clickTileHandler = (e) => {\r\n\tconst tiles = document.querySelectorAll('.tiles-container__tile');\r\n\tconst index = [...tiles].indexOf(e.target);\r\n\tactiveTile = e.target;\r\n\r\n\t// Jeżeli klikniemy w ten sam kafelek\r\n\tif (activeTile === pairsActiveTiles[0]) return;\r\n\r\n\tif (pairsActiveTiles.length === 0) {\r\n\t\tpairsActiveTiles[0] = activeTile;\r\n\t\tactiveTile.classList.add(`${shuffleTilesColors[index]}`);\r\n\t\treturn;\r\n\t} else {\r\n\t\ttiles.forEach((tile) =>\r\n\t\t\ttile.removeEventListener('click', clickTileHandler),\r\n\t\t);\r\n\t\tpairsActiveTiles[1] = activeTile;\r\n\t\tactiveTile.classList.add(`${shuffleTilesColors[index]}`);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (\r\n\t\t\t\tpairsActiveTiles[0].attributes[0].value ===\r\n\t\t\t\tpairsActiveTiles[1].attributes[0].value\r\n\t\t\t) {\r\n\t\t\t\tpairsActiveTiles.forEach((singleActiveTile) => {\r\n\t\t\t\t\tconst correctAnswerSign = document.createElement('i');\r\n\t\t\t\t\tsingleActiveTile.className = 'tiles-container__tile guessed';\r\n\t\t\t\t\tcorrectAnswerSign.className = 'fa fa-check';\r\n\t\t\t\t\tsingleActiveTile.appendChild(correctAnswerSign);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcorrectAnswers++;\r\n\r\n\t\t\t\tif (correctAnswers === tiles.length / 2) {\r\n\t\t\t\t\tconst endTime = new Date().getTime();\r\n\t\t\t\t\tgameScore = endTime - startTime;\r\n\t\t\t\t\ttiles.forEach((tile) => tile.remove());\r\n\r\n\t\t\t\t\tdocument.querySelector('body').insertAdjacentHTML(\r\n\t\t\t\t\t\t'afterBegin',\r\n\t\t\t\t\t\t`\r\n\t\t\t\t\t\t\t<div class=\"wrapper\">\r\n\t\t\t\t\t\t\t\t<h1 class=\"wrapper__score-text\">Twój wynik to <span class=\"time\">${(\r\n\t\t\t\t\t\t\t\t\tgameScore / 1000\r\n\t\t\t\t\t\t\t\t).toFixed(1)}</span> s.</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tdocument.querySelector('.wrapper').remove();\r\n\t\t\t\t\t\ttopBar.classList.add('is-visible');\r\n\t\t\t\t\t\tmainContainer.classList.add('is-visible');\r\n\t\t\t\t\t\ttilesContainer.classList.remove('is-visible');\r\n\t\t\t\t\t\tcorrectAnswers = 0;\r\n\t\t\t\t\t}, 3000);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpairsActiveTiles.forEach(\r\n\t\t\t\t\t(tile) => (tile.className = 'tiles-container__tile'),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Resetowanie\r\n\t\t\tactiveTile = '';\r\n\t\t\tpairsActiveTiles = [];\r\n\r\n\t\t\t// Ponowne ustawienie click eventa dla każdego kafelka\r\n\t\t\ttiles.forEach((tile) => tile.addEventListener('click', clickTileHandler));\r\n\t\t}, 500);\r\n\t}\r\n};\r\n\r\nexport default clickTile;\r\n","import generateTiles from './generate-tiles';\r\nimport { generateRandomTilesColors } from './generate-random-tiles-colors';\r\nimport clickTile from './click-tile';\r\n\r\nconst topBar = document.querySelector('.top-bar');\r\nconst tilesContainer = document.querySelector('.tiles-container');\r\nconst mainContainer = document.querySelector('.container');\r\nconst tilesGrid = document.querySelector('.tiles-grid');\r\nconst startButton = document.querySelector('.start-button');\r\n\r\nconst startGame = () => {\r\n\tstartButton.addEventListener('click', () => {\r\n\t\tconst rows = +tilesGrid.getAttribute('data-grid-rows');\r\n\t\tconst columns = +tilesGrid.getAttribute('data-grid-columns');\r\n\t\tlet tiles;\r\n\r\n\t\ttopBar.classList.remove('is-visible');\r\n\t\tmainContainer.classList.remove('is-visible');\r\n\t\ttilesContainer.classList.add('is-visible');\r\n\r\n\t\tgenerateTiles(rows, columns, tilesContainer, 'tiles-container__tile');\r\n\t\ttiles = generateRandomTilesColors(rows * columns);\r\n\t\tclickTile(tiles);\r\n\t});\r\n};\r\n\r\nexport default startGame;\r\n","import changeThemeColorMode from './change-theme-color-mode';\r\nimport generateTiles from './generate-tiles';\r\nimport changeBoardDimension from './change-board-dimension';\r\nimport startGame from './start-game';\r\n\r\nconst tilesGrid = document.querySelector('.tiles-grid');\r\n\r\nchangeThemeColorMode();\r\ngenerateTiles(4, 3, tilesGrid, 'tiles-grid__tile');\r\nchangeBoardDimension();\r\nstartGame();\r\n"]}