{"version":3,"sources":["create_tiles.js","varaibles_from_css.js","game.js"],"names":["DOMTilesContainer","document","querySelector","generateTiles","numberOfTiles","i","tile","createElement","classList","add","appendChild","cssVariables","styleSheets","cssRules","style","cssText","split","splice","gameTiles","topBar","mainContainer","bottomBar","startButton","tilesContainer","addEventListener","remove","numbersOfTiles","dataset","gridRows","gridColumns","console","log","Tile","lightColor","shadowColor","isClicked","cssVariablesColors","tilesColorsValues","allTiles","j","length","keyValuePairs","slice","trim","hexColorsNames","Object","keys","colorName"],"mappings":"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","file":"game.7bbe06d5.js","sourceRoot":"..\\src","sourcesContent":["const DOMTilesContainer = document.querySelector('.tiles-container');\r\nconst generateTiles = numberOfTiles => {\r\n\tfor (let i = 0; i < numberOfTiles; i++) {\r\n\t\tconst tile = document.createElement('li');\r\n\t\ttile.classList.add('tiles-container__tile');\r\n\t\tDOMTilesContainer.appendChild(tile);\r\n\t}\r\n};\r\n\r\nexport { generateTiles, DOMTilesContainer };\r\n","const cssVariables = document.styleSheets[1].cssRules[0].style.cssText.split(\r\n\t';',\r\n);\r\n\r\n// UsuniÄ™cie z listy zmiennej --radius --black i pustego stringa (trzy ostatnie elementy)\r\ncssVariables.splice(-3, 3);\r\n\r\nexport default cssVariables;\r\n","import { generateTiles, DOMTilesContainer } from './create_tiles';\r\nimport cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\nconst gameTiles = document.querySelector('.tiles-container');\r\nconst topBar = document.querySelector('.top-bar');\r\nconst mainContainer = document.querySelector('.container');\r\nconst bottomBar = document.querySelector('.bottom-bar.is-visible');\r\nconst startButton = document.querySelector('.start-button');\r\nconst tilesContainer = document.querySelector('.tiles-grid');\r\n\r\nstartButton.addEventListener('click', function() {\r\n\tgameTiles.classList.add('is-visible');\r\n\ttopBar.classList.remove('is-visible');\r\n\tmainContainer.classList.remove('is-visible');\r\n\tbottomBar.classList.remove('is-visible');\r\n\r\n\tlet numbersOfTiles =\r\n\t\ttilesContainer.dataset.gridRows * tilesContainer.dataset.gridColumns;\r\n\r\n\tconsole.log(numbersOfTiles);\r\n\r\n\tif (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n\t\tgenerateTiles(numbersOfTiles);\r\n\t}\r\n\r\n\tif (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n\t\tDOMTilesContainer.classList.add('four-columns');\r\n\t\tgenerateTiles(numbersOfTiles);\r\n\t}\r\n});\r\n\r\nclass Tile {\r\n\tconstructor(lightColor, shadowColor, isClicked) {\r\n\t\tthis.lightColor = lightColor;\r\n\t\tthis.shadowColor = shadowColor;\r\n\t\tthis.isClicked = isClicked;\r\n\t}\r\n}\r\n\r\nconst cssVariablesColors = {};\r\nlet tilesColorsValues = [];\r\nconst allTiles = {};\r\nlet j = 0;\r\n\r\nfor (let i = 0; i < cssVariables.length; i++) {\r\n\tlet keyValuePairs = cssVariables[i].split(':');\r\n\ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n\tif (keyValuePairs[0] !== '') {\r\n\t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n\t}\r\n}\r\n\r\nconst hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\nfor (let i = 0; i < cssVariables.length / 2; i++) {\r\n\tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n\tallTiles[colorName] = new Tile(\r\n\t\ttilesColorsValues[j],\r\n\t\ttilesColorsValues[j + 1],\r\n\t\tfalse,\r\n\t);\r\n\tj += 2;\r\n}\r\n\r\nconsole.log(allTiles);\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}