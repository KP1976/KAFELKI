{"version":3,"sources":["change-mode.js","tiles-grid.js","get-rows-and-columns.js","index.js"],"names":["htmlDOM","document","documentElement","switcher","querySelector","moon","sun","changeThemeColorMode","addEventListener","e","target","checked","setAttribute","classList","remove","add","mainContainer","tilesContainer","gameTilesContainer","width","generateTilesGrid","rows","columns","innerHTML","i","j","tile","createElement","window","innerWidth","appendChild","dataset","gridColumns","gridRows","radioInputs","querySelectorAll","boardRows","boardColumns","getTilesBoardDimension","length","diemensionString","nextElementSibling","textContent","parseInt","charAt"],"mappings":";;AGAA;;AACA;;AHDA,ACAA,IDAMA,ACAAgB,ODAO,GAAGf,GCAG,GAAGA,EDAE,CAACC,KCAK,CAACE,SDA/B,ICAsB,CAAuB,YAAvB,CAAtB;ADCA,AEDA,ADCA,IDAMD,ACAAc,QDAQ,GAAGhB,GCAG,GAAGA,EDAE,CAACG,KCAK,CAACA,ODAf,CAAuB,KCAjB,CAAuB,aAAvB,CAAvB,YDAiB,CAAjB;AACA,AGCAH,AFDA,IDAMI,ACAAa,IDAI,AGCF,CAACd,EHDIH,QAAQ,CAACG,EGCtB,AFDwB,CECD,EFDIH,QDAd,ACAsB,CDAC,ACAAG,UDAvB,CAAb,ECA2B,CAAuB,CEClD,EAAmDO,OAAnD,GAA6D,IAA7D,CFD2B,CAA3B;ADCA,AGEA,AFFA,IDAML,ACAFa,GDAK,ECAT,CDAYlB,QAAQ,CAACG,aAAT,CAAuB,SAAvB,CAAZ;AGGA,4BAEA;AHHA,AEHA,ADGA,IDAMG,AEHA2B,ADGAd,WCHW,GAAGnB,GDGG,GDAG,ACAA,ECHE,CFGC,AEHAkC,MDGvBf,GDAAb,OEHc,CAA0B,MDGpB,CAACc,IAAD,CDAG,CCAIC,EDAE,KCAT,EAAmB,UCHzB,CAApB;AFICnB,AEHD,ACMA,AFHCc,EDAAd,ACAAc,ECHGmB,MFGK,CAAC5B,EEHG,GAAG,ADGD,CCHf,ADGgBe,SAAf,CDAA,CAA0B,CCAC,EAA3B,IDAA,EAAmC,UAAAd,CAAC,EAAI;AACvC,AEHF,IAAI4B,IFGE5B,CAAC,CAACC,MAAF,AEHU,CFGDC,EEHI,CAAnB,IFGE,EAAsB;AACrBX,AEFH,ADCC,MDCEA,CCDG,IAAIwB,CAAC,CDCD,CAACZ,CCDG,CAAb,EAAgBY,CAAC,GAAGF,ECDHc,EFEf,CAAqB,ECDvB,EAA6BZ,CAAC,CCD/B,CDCC,CCD4Ba,CDCM,ODChC,EAAuC,EEF1C,KFEG;AACAhC,ACDD,MDCCA,GCDI,CDCA,CAACQ,ECDGY,CAAC,GAAG,CAAb,EDCC,ACDeA,CDCAX,ACDC,GAAGO,GDCnB,CAAsB,ACDvB,EAA0BI,CAAC,EAA3B,EAA+B,IDC9B;AACAnB,AEFH,ADCG,ICDGgC,EFEHhC,GAAG,CAACO,ACDEa,IAAI,GAAGzB,EDCb,CAAcc,GAAd,CAAkB,CCDG,CCDI,ADCHY,GCDM,MFE5B,GEFGW,CDCU,CAAuB,IAAvB,CAAb,eCD4B,GAAM;AFGlC,AEFF,KFFC,EEEI,IFEG,AEFCd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,WAAW,CAACK,MAAhC,EAAwCf,CAAC,EAAzC,EAA6C;AFG3CxB,AEFDkC,ADAC,ICADA,EFEClC,ICFIqB,GDEG,CAACT,ACFA,CCAE,CAACY,CAAD,CAAX,CAAehB,ADAD,CAAb,EAAgB,IDEhB,CAAqB,QEFtB,CAAgC,OFE/B,CEFD,CFEwC,CEFE,KFEzC,KEFkDC,CAAT,EAAY;AFGrDJ,AEFA,ADACqB,MDEDrB,ECFCqB,EDEG,AEFEc,CFED3B,CCFA,CAACA,ODEN,CAAeE,CCFd,CAAeA,CDEhB,CAAmB,CEFG,ADArB,CAAmB,ECAKN,CAAC,CAACC,KFE3B,CEFyB,CAAS+B,ODAjC,WCAwB,CAA4BC,WAArD;AFGApC,AEDA8B,MFCA9B,AEDA8B,GFCG,CAACvB,KEDK,GAAG8B,CFCZ,CAAc7B,MAAd,AEDoB,CFCC,AEDA0B,WFCrB,KEDqC,CAACI,MAAjB,CAAwB,CAAxB,CAAD,CAApB;AFEA,AEDAP,ADFC,MCEDA,MDFKT,MCEO,ADFD,CAACC,ECEGc,QAAQ,ADFlB,CCGJH,EDHwB,IAAxB,EAA8B,QCGd,CAACI,MAAjB,CAAwBJ,gBAAgB,CAACD,MAAjB,GAA0B,CAAlD,CADsB,CAAvB;AFED,ACHG,GDPJ,WCOQjB,OAAO,KAAK,CAAhB,EAAmB;ADIvB,AECE,ADJGH,CDTN,SEaOV,CAAC,CAACC,ADJHS,KAAK,CCIJ,CAASR,CDJF,EAAR,ICIH,EAAsB;AACrB,ADJE,WAFD,MAEO,eCIUyB,SAAlB,EAA6BC,YAA7B;AACA,ADJElB,YAAAA,GDGSZ,ECHJ,GAAG,KAAR;ACKH,ADJG,KCPJ;AAYA,ADJG,SAND,MAMO;ACKV,ADJIY,CCXL,SDWKA,KAAK,GAAG,EAAR;AACA;AACD,eCIWmB;;ADHZ,UAAIjB,IAAI,KAAK,CAAb,EAAgB;AACfK,QAAAA,IAAI,CAACb,SAAL,CAAeE,GAAf,CAAmB,kBAAnB;;AACA,YAAIa,MAAM,CAACC,UAAP,GAAoB,IAAxB,EAA8B;AAC7B,cAAIP,OAAO,KAAK,CAAhB,EAAmB;AAClBH,YAAAA,KAAK,GAAG,KAAR;AACA;AACD;AACD;;AACD,UAAIE,IAAI,KAAK,CAAb,EAAgB;AACfK,QAAAA,IAAI,CAACb,SAAL,CAAeE,GAAf,CAAmB,kBAAnB;;AACA,YAAIa,MAAM,CAACC,UAAP,GAAoB,IAAxB,EAA8B;AAC7BV,UAAAA,KAAK,GAAG,KAAR;AACA;AACD;;AACDF,MAAAA,cAAc,CAACa,WAAf,CAA2BJ,IAA3B;AACA;AACD;;AACDT,EAAAA,cAAc,CAACc,OAAf,CAAuBC,WAAvB,GAAqCV,OAArC;AACAL,EAAAA,cAAc,CAACc,OAAf,CAAuBE,QAAvB,GAAkCZ,IAAlC;AACAH,EAAAA,kBAAkB,CAACa,OAAnB,CAA2BV,IAA3B,GAAkCA,IAAlC;AACAL,EAAAA,aAAa,CAACe,OAAd,CAAsBZ,KAAtB,GAA8BA,KAA9B;AACA,CAtCD;;eAwCeC","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const htmlDOM = document.documentElement;\r\nconst switcher = document.querySelector('.switch-mode-container__switch');\r\nconst moon = document.querySelector('.fa-moon');\r\nconst sun = document.querySelector('.fa-sun');\r\n\r\nconst changeThemeColorMode = () => {\r\n\tswitcher.addEventListener('click', e => {\r\n\t\tif (e.target.checked) {\r\n\t\t\thtmlDOM.setAttribute('data-colormode', 'light');\r\n\t\t\tmoon.classList.remove('isVisible');\r\n\t\t\tsun.classList.add('isVisible');\r\n\t\t} else {\r\n\t\t\thtmlDOM.setAttribute('data-colormode', 'dark');\r\n\t\t\tmoon.classList.add('isVisible');\r\n\t\t\tsun.classList.remove('isVisible');\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default changeThemeColorMode;\r\n","const mainContainer = document.querySelector('.container');\r\nconst tilesContainer = document.querySelector('.tiles-grid');\r\nconst gameTilesContainer = document.querySelector('.tiles-container');\r\nlet width;\r\n\r\nconst generateTilesGrid = (rows, columns) => {\r\n\ttilesContainer.innerHTML = '';\r\n\tfor (let i = 0; i < columns; i++) {\r\n\t\tfor (let j = 0; j < rows; j++) {\r\n\t\t\tconst tile = document.createElement('li');\r\n\t\t\tif (rows === 4) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\tif (window.innerWidth > 1200) {\r\n\t\t\t\t\tif (columns === 3) {\r\n\t\t\t\t\t\twidth = '';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\twidth = '930';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twidth = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (rows === 5) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\tif (window.innerWidth > 1200) {\r\n\t\t\t\t\tif (columns === 4) {\r\n\t\t\t\t\t\twidth = '930';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (rows === 6) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\tif (window.innerWidth > 1200) {\r\n\t\t\t\t\twidth = '800';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttilesContainer.appendChild(tile);\r\n\t\t}\r\n\t}\r\n\ttilesContainer.dataset.gridColumns = columns;\r\n\ttilesContainer.dataset.gridRows = rows;\r\n\tgameTilesContainer.dataset.rows = rows;\r\n\tmainContainer.dataset.width = width;\r\n};\r\n\r\nexport default generateTilesGrid;\r\n","import generateTilesGrid from './tiles-grid';\r\n\r\nconst radioInputs = document.querySelectorAll('.radios-container__radio-input');\r\nlet boardRows = 4;\r\nlet boardColumns = 3;\r\n\r\ngenerateTilesGrid(boardRows, boardColumns);\r\n\r\nconst getTilesBoardDimension = () => {\r\n\tfor (let i = 0; i < radioInputs.length; i++) {\r\n\t\tradioInputs[i].addEventListener('change', function(e) {\r\n\t\t\tconst diemensionString = e.target.nextElementSibling.textContent;\r\n\r\n\t\t\tboardRows = parseInt(diemensionString.charAt(0));\r\n\t\t\tboardColumns = parseInt(\r\n\t\t\t\tdiemensionString.charAt(diemensionString.length - 1),\r\n\t\t\t);\r\n\r\n\t\t\tif (e.target.checked) {\r\n\t\t\t\tgenerateTilesGrid(boardRows, boardColumns);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default getTilesBoardDimension;\r\n","import changeThemeColorMode from './change-mode';\r\nimport getTilesBoardDimension from './get-rows-and-columns';\r\n\r\ndocument.querySelector('.radios-container__radio').checked = true;\r\n\r\ngetTilesBoardDimension();\r\nchangeThemeColorMode();\r\n\r\n// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają się szare.\r\n*/\r\n"]}