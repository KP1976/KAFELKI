{"version":3,"sources":["create_tiles.js","varaibles_from_css.js","random_numbers.js","index.js"],"names":["DOMTilesContainer","document","querySelector","generateTiles","numberOfTiles","i","tile","createElement","classList","add","appendChild","cssVariables","styleSheets","cssRules","style","cssText","split","splice","randomNumbers","Set","generateRandomNumbers","size","Math","floor","random","numbersOfTiles"],"mappings":";;AGAA;;AACA;;AHDA,AGEA,ADFA,ADAA,IDAMA,AEAAkB,ADAAP,YAAY,CCAC,EDAEV,CCAC,CFAC,GAAGA,AEAAkB,GAAJ,ADAO,CAACP,CCA9B,GFAkC,CAACV,MCAd,CAAqB,CAArB,EAAwBW,GDAnB,CAAuB,ICA5B,CAAiC,CAAjC,EAAoCC,KAApC,CAA0CC,IDArC,CAA1B,ECAqB,CAAkDC,KAAlD,CACpB,GADoB,CAArB,EAIA;;ACFA,ADGAL,ICHMS,QDGM,CAACH,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CCH2B,EDI3B,CCJ8B,SAAxBG,qBAAwB,GAAM;AFDpC,AEEC,IFFKjB,KEEEe,QFFW,GAAG,EEED,CAACG,IAAd,EFFFlB,GEEyB,EAA9B,EAAkC,MFFb,CAAAC,aAAa,EAAI;AACtC,AGED,ADAEc,ADGFP,IEHMc,ADAJP,GFFI,IAAIb,CAAC,ACKC,CAACY,EDLC,CAAb,CEEc,CFFEZ,AGEG,ADAJI,CFFE,ACKlB,CAAoB,CEHG,ADArB,ADGmB,CDLAL,AEEDkB,ADGpB,CEHA,CFGwB,CAAxB,CCHwB,CAACC,KAAL,CAAWD,EFF9B,EAAmCjB,AEED,CFFE,AEEDmB,EFFnC,EAAwC,EEEV,KAAgB,EAA3B,CAAlB;AFDA,AEEA,QFFMlB,IAAI,GAAGL,ACMAU,QDNQ,CAACJ,aAAT,CAAuB,IAAvB,CAAb;AACAD,AGEF,IHFEA,AGEEmB,IHFE,CAACjB,SAAL,AGEgB,CHFDC,GAAf,CAAmB,AGEE,EAAnB,IAAyBgB,cAAc,GHFzC,EGE8C,EAAhD,EAAoD;AHDlDzB,AGED,ADDA,IFDCA,KECMkB,YFDW,CAACR,AECnB,WFDC,CAA8BJ,CGEjBmB,GHFb,WGED;AHDC,AGED,ADDA,CALD;AFKC,CAND;AGSA,ADDAL,ICCIK,cAAc,GDDG,ECCE,EAAnB,IAAyBA,cAAc,KAAK,EAAhD,EAAoD;AACnDzB,eDAckB,mBCAIV,SAAlB,CAA4BC,GAA5B,CAAgC,cAAhC;;AACA,mCAAcgB,cAAd;AACA,EAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const DOMTilesContainer = document.querySelector('.tiles-container');\r\nconst generateTiles = numberOfTiles => {\r\n\tfor (let i = 0; i < numberOfTiles; i++) {\r\n\t\tconst tile = document.createElement('li');\r\n\t\ttile.classList.add('tiles-container__tile');\r\n\t\tDOMTilesContainer.appendChild(tile);\r\n\t}\r\n};\r\n\r\nexport { generateTiles, DOMTilesContainer };\r\n","const cssVariables = document.styleSheets[0].cssRules[0].style.cssText.split(\r\n\t';',\r\n);\r\n\r\n// Usunięcie z listy koloru szarego i czarnego (dwa pierwsze elementy)\r\ncssVariables.splice(0, 2);\r\n// Usunięcie z listy zmiennej --radius i pustego stringa (dwa ostatnie elementy)\r\ncssVariables.splice(-2, 2);\r\n\r\nexport default cssVariables;\r\n","const randomNumbers = new Set();\r\n\r\nconst generateRandomNumbers = () => {\r\n\twhile (randomNumbers.size !== 12) {\r\n\t\trandomNumbers.add(Math.floor(Math.random() * 12));\r\n\t}\r\n\treturn randomNumbers;\r\n};\r\n\r\ngenerateRandomNumbers();\r\n\r\nexport default randomNumbers;\r\n","import { generateTiles, DOMTilesContainer } from './create_tiles';\r\nimport cssVariables from './varaibles_from_css';\r\nimport randomNumbers from './random_numbers';\r\n\r\nconst numbersOfTiles = 20;\r\n\r\nif (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n\tgenerateTiles(numbersOfTiles);\r\n}\r\n\r\nif (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n\tDOMTilesContainer.classList.add('four-columns');\r\n\tgenerateTiles(numbersOfTiles);\r\n}\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}