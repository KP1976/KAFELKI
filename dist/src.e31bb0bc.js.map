{"version":3,"sources":["change-mode.js","index.js"],"names":["body","document","querySelector","startButton","radioLabels","querySelectorAll","radioBoxes","switcher","titles","isCheckedFonts","switchColorTheme","addEventListener","checked","classList","add","radioLabel","radioBox","title","isCheckedFont","remove"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const body = document.querySelector('body');\r\nconst startButton = document.querySelector('.button');\r\nconst radioLabels = document.querySelectorAll('.radios-container__radio-label');\r\nconst radioBoxes = document.querySelectorAll('.radios-container__radio-box');\r\nconst switcher = document.querySelector('.switch-mode-container__switch');\r\nconst titles = document.querySelectorAll('.title');\r\nconst isCheckedFonts = document.querySelectorAll('.fa-check');\r\n\r\nconst switchColorTheme = () => {\r\n\tswitcher.addEventListener('click', function() {\r\n\t\tif (this.checked) {\r\n\t\t\tbody.classList.add('light-mode');\r\n\t\t\tstartButton.classList.add('light-mode');\r\n\t\t\tfor (let radioLabel of radioLabels) {\r\n\t\t\t\tradioLabel.classList.add('light-mode');\r\n\t\t\t}\r\n\t\t\tfor (let radioBox of radioBoxes) {\r\n\t\t\t\tradioBox.classList.add('light-mode');\r\n\t\t\t}\r\n\t\t\tfor (let title of titles) {\r\n\t\t\t\ttitle.classList.add('light-mode');\r\n\t\t\t}\r\n\t\t\tfor (let isCheckedFont of isCheckedFonts) {\r\n\t\t\t\tisCheckedFont.classList.add('light-mode');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbody.classList.remove('light-mode');\r\n\t\t\tstartButton.classList.remove('light-mode');\r\n\t\t\tfor (let radioLabel of radioLabels) {\r\n\t\t\t\tradioLabel.classList.remove('light-mode');\r\n\t\t\t}\r\n\t\t\tfor (let radioBox of radioBoxes) {\r\n\t\t\t\tradioBox.classList.remove('light-mode');\r\n\t\t\t}\r\n\t\t\tfor (let title of titles) {\r\n\t\t\t\ttitle.classList.remove('light-mode');\r\n\t\t\t}\r\n\t\t\tfor (let isCheckedFont of isCheckedFonts) {\r\n\t\t\t\tisCheckedFont.classList.remove('light-mode');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default switchColorTheme;\r\n","import switchColorTheme from './change-mode';\r\n\r\nswitchColorTheme();\r\n\r\n// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\r\n\r\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\r\n// import cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\n// const numbersOfTiles = 20;\r\n\r\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n// \tDOMTilesContainer.classList.add('four-columns');\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}