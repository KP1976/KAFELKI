{"version":3,"sources":["change-mode.js","tiles-grid.js","get-rows-and-columns.js","index.js"],"names":["htmlDOM","document","documentElement","switcher","querySelector","changeThemeColorMode","addEventListener","switchColorTheme","e","target","checked","setAttribute","tilesContainer","mainTitle","containerOfTiles","buttonStart","generateTilesGrid","rows","columns","innerHTML","i","j","tile","createElement","classList","add","appendChild","dataset","gridColumns","marginTiles","remove","radioInputs","querySelectorAll","getTilesBoardDimension","getRowsAndColumns","diemensionString","nextElementSibling","textContent","boardRows","parseInt","charAt","boardColumns","length"],"mappings":";;AGAA;;AACA;;AHDA,ACAA,IDAMA,ACAAY,ODAO,GAAGX,ICAI,GAAGA,CDAC,CAACC,MCAM,CAACE,QDAhC,KCAuB,CAAuB,aAAvB,CAAvB;ADCA,AEDA,ADCA,IDAMD,ACAAU,QDAQ,CCAC,EDAEZ,CCACA,ODAO,CAACG,ACAA,CAACA,YDAV,CAAuB,ACAtB,CAAuB,QAAvB,CAAlB,sBDAiB,CAAjB;AGEA,AFDA,IAAMU,gBAAgB,GAAGb,QAAQ,CAACG,aAAT,CAAuB,qBAAvB,CAAzB;ADCA,AGCA,AFDA,IDAMC,ACAAU,WAAW,GAAGd,MDAM,ECAE,CDAC,ACAAG,CEG7B,QHHMC,ICAc,CAAuB,SAAvB,CAApB,KDA6B,GAAM;AAClCF,EAAAA,QAAQ,CAACG,gBAAT,CAA0B,OAA1B,EAAmCC,gBAAnC;AACA,AEHD,ACKA,AFFA,CDFA,GEDMwB,ADGAf,WCHW,GAAGf,GDGG,GAAG,ECHE,CAAC+B,MDGvBhB,UCHc,CAA0B,MDGpB,CAACC,IAAD,EAAOC,OAAP,EAAmB,UCHzB,CAApB;AAEA,ADECN,EAAAA,cAAc,CAACO,OCFE,CAAlB,CDEC,CCFoB,CAArB,CDE4B,EAA3B;ADCD,IAAMZ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,CAAC,EAAI;AAC7B,AEFD,ADCC,ICDKyB,EFEDzB,CAAC,ACDA,CDCCC,GCDGW,CAAC,EDCN,CAASV,ACDA,CAAb,EAAgBU,CAAC,GDCjB,ACDoBF,EDCE,EEFK,GAAG,ADC9B,EAA6BE,CAAC,EAA9B,EAAkC,ECD7Ba,sBAAyB,GAAM;AFGnCjC,AEFD,ADCC,IDCAA,EEFKkC,GDCA,EDCE,CAACvB,CCDCU,CAAC,GAAG,CAAb,EAAgBA,CAAC,ECDK,CFEtB,ACDoBJ,CDCC,CEFI,EDCzB,EAA0BI,CAAC,EAA3B,ECDKa,ADC0B,MDC/B,EAAuC,OAAvC,EEFyB,CAAA1B,CAAC,EAAI;AFG9B,AEFA,ADCC,GDDF,KEAO2B,CFEA,CCDCb,IAAI,GAAGrB,OCDQ,CDCA,CAACsB,CCDEf,CAAC,CAACC,MAAF,CAAS2B,GDCpB,CAAuB,IAAvB,CAAb,SCDwB,CAA4BC,WAA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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const htmlDOM = document.documentElement;\r\nconst switcher = document.querySelector('.switch-mode-container__switch');\r\n\r\nconst changeThemeColorMode = () => {\r\n\tswitcher.addEventListener('click', switchColorTheme);\r\n};\r\n\r\nconst switchColorTheme = e => {\r\n\tif (e.target.checked) {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'light');\r\n\t} else {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'dark');\r\n\t}\r\n};\r\n\r\nexport default changeThemeColorMode;\r\n","const tilesContainer = document.querySelector('.tiles-grid');\r\nconst mainTitle = document.querySelector('.title');\r\nconst containerOfTiles = document.querySelector('.container-of-tiles');\r\nconst buttonStart = document.querySelector('.button');\r\n\r\nconst generateTilesGrid = (rows, columns) => {\r\n\ttilesContainer.innerHTML = '';\r\n\tfor (let i = 0; i < columns; i++) {\r\n\t\tfor (let j = 0; j < rows; j++) {\r\n\t\t\tconst tile = document.createElement('li');\r\n\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\ttilesContainer.appendChild(tile);\r\n\t\t}\r\n\t}\r\n\ttilesContainer.dataset.gridColumns = columns;\r\n\ttilesContainer.dataset.marginTiles = 2 * columns + 1;\r\n\r\n\tif (rows === 5) {\r\n\t\tmainTitle.classList.add('margin-five-rows');\r\n\t\tcontainerOfTiles.classList.add('margin-five-rows');\r\n\t\tbuttonStart.classList.add('margin-five-rows');\r\n\t\tmainTitle.classList.remove('margin-six-rows');\r\n\t\tcontainerOfTiles.classList.remove('margin-six-rows');\r\n\t\tbuttonStart.classList.remove('margin-six-rows');\r\n\t} else if (rows === 6) {\r\n\t\tmainTitle.classList.remove('margin-five-rows');\r\n\t\tcontainerOfTiles.classList.remove('margin-five-rows');\r\n\t\tbuttonStart.classList.remove('margin-five-rows');\r\n\t\tmainTitle.classList.add('margin-six-rows');\r\n\t\tcontainerOfTiles.classList.add('margin-six-rows');\r\n\t\tbuttonStart.classList.add('margin-six-rows');\r\n\t} else {\r\n\t\tmainTitle.classList.remove('margin-five-rows');\r\n\t\tcontainerOfTiles.classList.remove('margin-five-rows');\r\n\t\tbuttonStart.classList.remove('margin-five-rows');\r\n\t\tmainTitle.classList.remove('margin-six-rows');\r\n\t\tcontainerOfTiles.classList.remove('margin-six-rows');\r\n\t\tbuttonStart.classList.remove('margin-six-rows');\r\n\t}\r\n};\r\n\r\nexport default generateTilesGrid;\r\n","import generateTilesGrid from './tiles-grid';\r\n\r\nconst radioInputs = document.querySelectorAll('.radios-container__radio-input');\r\n\r\ngenerateTilesGrid(4, 3);\r\n\r\nconst getTilesBoardDimension = () => {\r\n\tconst getRowsAndColumns = e => {\r\n\t\tconst diemensionString = e.target.nextElementSibling.textContent;\r\n\t\tconst boardRows = parseInt(diemensionString.charAt(0));\r\n\t\tconst boardColumns = parseInt(\r\n\t\t\tdiemensionString.charAt(diemensionString.length - 1),\r\n\t\t);\r\n\r\n\t\tif (e.target.checked) {\r\n\t\t\tgenerateTilesGrid(boardRows, boardColumns);\r\n\t\t}\r\n\t};\r\n\r\n\tfor (let i = 0; i < radioInputs.length; i++) {\r\n\t\tradioInputs[i].addEventListener('change', getRowsAndColumns);\r\n\t}\r\n};\r\n\r\nexport default getTilesBoardDimension;\r\n","import changeThemeColorMode from './change-mode';\r\nimport getTilesBoardDimension from './get-rows-and-columns';\r\n\r\ngetTilesBoardDimension();\r\nchangeThemeColorMode();\r\n\r\n// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\r\n\r\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\r\n// import cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\n// const numbersOfTiles = 20;\r\n\r\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n// \tDOMTilesContainer.classList.add('four-columns');\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}