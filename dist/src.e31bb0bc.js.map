{"version":3,"sources":["change-mode.js","tiles-grid.js","get-rows-and-columns.js","index.js"],"names":["htmlDOM","document","documentElement","switcher","querySelector","moon","sun","changeThemeColorMode","addEventListener","switchColorTheme","e","target","checked","setAttribute","classList","remove","add","mainContainer","tilesContainer","margin","width","console","log","window","innerWidth","generateTilesGrid","rows","columns","innerHTML","i","j","tile","createElement","appendChild","dataset","gridColumns","gridRows","marginTiles","radioInputs","querySelectorAll","getTilesBoardDimension","getRowsAndColumns","diemensionString","nextElementSibling","textContent","boardRows","parseInt","charAt","boardColumns","length"],"mappings":";;AGAA;;AACA;;AHDA,ACAA,IDAMA,ACAAiB,ODAO,GAAGhB,GCAG,GAAGA,EDAE,CAACC,KCAK,CAACE,SDA/B,ICAsB,CAAuB,YAAvB,CAAtB;ADCA,AEDA,ADCA,IDAMD,ACAAe,QDAQ,GAAGjB,GCAG,GAAGA,EDAE,CAACG,KCAK,CAACA,ODAf,CAAuB,KCAjB,CAAuB,aAAvB,CAAvB,YDAiB,CAAjB;AACA,AGCAH,AFDA,IDAMI,ACAFc,IDAM,AGCF,CAACf,CFDT,CDAaH,QAAQ,CAACG,EGCtB,CAAuB,UHDV,CAAuB,UAAvB,CAAb,IGCA,EAAmDQ,OAAnD,GAA6D,IAA7D;AHAA,AGEA,AFFA,IDAMN,ACAFc,GDAK,ECAT,CDAYnB,QAAQ,CAACG,aAAT,CAAuB,SAAvB,CAAZ;AGGA,AFDAiB,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,SEGnB,CFHA;ADAA,AEHA,IFGMjB,AEHA+B,WAAW,GAAGrC,MFGM,EEHE,CFGC,AEHAsC,SFGvBhC,OEHc,CAA0B,YFGjB,GAAM,iBEHf,CAApB;AFICJ,AEFD,ACKA,AFFA,EDDCA,ECCKsB,MDDG,CAACjB,UCCa,GCHL,ADGQ,CCH1B,EFEC,AEFoB,CFEM,AEF3B,KDGMiB,EDDL,EAAmChB,aCCV,CAACiB,EDD1B,ECCyB,EAAOC,OAAP,EAAmB;ADA5C,ACCAT,CDHD,CCGCA,cAAc,CAACU,SAAf,GAA2B,EAA3B;ACFD,IAAMY,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AFGrC,AEFC,ADEA,IDAK/B,EEFCgC,CDED,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,CDAI,ECADF,CDAI,AEFD,GAAG,GDE1B,EAA6BE,CDAxBpB,ACAyB,EAA9B,CCFMgC,CDE4B,YDAV,CAAA/B,CAAC,EAAI,AEFH,CAAAA,CAAC,EAAI;AFG/B,AEFC,ADEA,MDAGA,CAAC,CAACC,AEFC+B,CDED,IAAIZ,CDAN,ACAO,CDAElB,ECAC,CAAb,EAAgBkB,CAAC,CDAlB,EAAsB,AEFC,ADEFJ,GCFKhB,CAAC,ADE1B,CCF2BC,CDEDmB,CAAC,EAA3B,ECFyB,ADEM,CCFGa,kBAAT,CAA4BC,WAArD;AFGA5C,AEFA,ADEC,IDADA,IEFM6C,EDECd,CDAA,CAAClB,ECAG,GCFI,ADEDZ,GCFI6C,IFElB,CAAqB,ACAC,CAACd,ECFG,CAACU,UDEb,CAAuB,CDArC,EAAuC,CCAzB,CCF6B,ADE1C,CCF2CK,IFE5C,EEF2B,CAAwB,CAAxB,CAAD,CAA1B;AFGA1C,AEFA,ACMF,IHJEA,IAAI,AEFE2C,CFEDlC,SAAL,CAAeC,CEFG,GAAG+B,EFErB,CAAsB,KEFO,CAC5BJ,KFCD,WEDiB,CAACK,MAAjB,CAAwBL,gBAAgB,CAACO,MAAjB,GAA0B,CAAlD,CAD4B,CAA7B;AFGA3C,AGIF,AFLG,IDCDA,GAAG,CAACQ,ECDCY,IAAI,GDCT,CAAcV,CCDA,CAAb,CDCD,CAAkB,ACDD,WDCjB;AACA,AEAA,ACIF,AFLIe,GDHH,KEIKrB,ADDFqB,CDCI,AEAD,CAACpB,EDDA,CAACG,GCCH,CAASF,KDDX,CAAeI,CCCjB,EAAsB,ADDpB,CAAmB,kBAAnB;ADEFhB,AEAC,ACKH,AFNI+B,IDCF/B,ICDE+B,GDCK,CAAClB,ACDF,CAACC,SAAL,CAAeC,CDCjB,CAAqB,ICDnB,CCCiB8B,ADDK,SCCvB,EFAD,AEA8BG,CDD5B,CDCqC,MAAvC,IEAC;AFCD3C,AEAC,ACMH,AFPI0B,IDCF1B,IAAI,ACDF0B,CDCGjB,GCDC,CAACA,KDCP,CAAeE,GAAf,ACDE,CDCiB,ACDFD,MAAf,CAAsB,IDCxB,WCDE;ADEFT,AEAA,ACMF,AFPIa,GCTH,CFUCb,GAAG,CAACQ,ACDFK,MAAM,GDCR,ACDW,CDCGJ,ICDZ,EDCF,CAAqB,WAArB;AACA,AGMF;AHLC,AEAA,ACOD,AFTI,CDRJ,MEUM,IAAIc,CAAC,ADFHN,GCEM,CAAb,EAAgBM,ADFH,CCEI,ADFHL,GCEMc,ODFb,GAAoB,CCEI,CAACW,EDF7B,EAA8B,ECEjC,EAAwCpB,CAAC,EAAzC,EAA6C;AAC5CS,ACOF,AFTK,ICEHA,UDFOX,CCEI,CAACE,CAAD,CAAX,CAAerB,EDFD,KAAK,CAAhB,EAAmB,MCEtB,CAAgC,QAAhC,EAA0CiC,iBAA1C;AACA,ACOF,AFTMrB,YAAAA,GDESb,ECFJ,GAAG,EAAR;ACGL,ACOD,AFTM,CCdN,UDYK,MAEO;AEWZ,AFVMa,YAAAA,KAAK,GAAG,KAAR;AEWN,AFVM,eCESoB;ACSf,AFVK,SAND,MAMO;AEWX,AFVKpB,UAAAA,KAAK,GAAG,EAAR;AEWL,AFVK;AEWL,AFVI;AEWJ;AAEA,AFZG,UAAIM,IAAI,KAAK,CAAb,EAAgB;AEanB,AFZIK,QAAAA,IAAI,CAACjB,SAAL,CAAeE,GAAf,CAAmB,kBAAnB;AEaJ,AFZIe,QAAAA,IAAI,CAACjB,SAAL,CAAeE,GAAf,CAAmB,YAAnB;AEaJ,AFZIe,QAAAA,IAAI,CAACjB,SAAL,CAAeC,MAAf,CAAsB,eAAtB;AEcJ,AFbII,QAAAA,MAAM,GAAG,QAAT;AEcJ;AACA,AFdI,YAAII,MAAM,CAACC,UAAP,GAAoB,IAAxB,EAA8B;AEelC,AFdK,cAAIG,OAAO,KAAK,CAAhB,EAAmB;AEexB,AFdMP,YAAAA,KAAK,GAAG,KAAR;AEeN,AFdM;AEeN,AFdK;AEgBL,AFfI;AEiBJ;AACA,AFjBG,UAAIM,IAAI,KAAK,CAAb,EAAgB;AEkBnB,AFjBIK,QAAAA,IAAI,CAACjB,SAAL,CAAeE,GAAf,CAAmB,kBAAnB;AEkBJ,AFjBIe,QAAAA,IAAI,CAACjB,SAAL,CAAeC,MAAf,CAAsB,YAAtB;AEkBJ,AFjBIgB,QAAAA,IAAI,CAACjB,SAAL,CAAeE,GAAf,CAAmB,eAAnB;AEkBJ,AFjBIG,QAAAA,MAAM,GAAG,OAAT;AEkBJ;AACA,AFlBI,YAAII,MAAM,CAACC,UAAP,GAAoB,IAAxB,EAA8B;AEmBlC,AFlBKJ,UAAAA,KAAK,GAAG,KAAR;AEoBL,AFnBK;AEoBL,AFnBI;AEoBJ;AACA,AFpBGF,MAAAA,cAAc,CAACe,WAAf,CAA2BF,IAA3B;AEqBH,AFpBG;AEqBH,AFpBE;AEqBF;AAEA,AFtBCV,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AEuBD,AFtBCR,EAAAA,cAAc,CAACgB,OAAf,CAAuBC,WAAvB,GAAqCR,OAArC;AEuBD,AFtBCT,EAAAA,cAAc,CAACgB,OAAf,CAAuBE,QAAvB,GAAkCV,IAAlC;AEuBD,AFtBCR,EAAAA,cAAc,CAACgB,OAAf,CAAuBG,WAAvB,GAAqClB,MAArC;AEuBD,AFtBCF,EAAAA,aAAa,CAACiB,OAAd,CAAsBd,KAAtB,GAA8BA,KAA9B;AEuBD,AFtBC,CAhDD;AEuEA;AACA,eFtBeK;AEwBf","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const htmlDOM = document.documentElement;\r\nconst switcher = document.querySelector('.switch-mode-container__switch');\r\nconst moon = document.querySelector('.fa-moon');\r\nconst sun = document.querySelector('.fa-sun');\r\n\r\nconst changeThemeColorMode = () => {\r\n\tswitcher.addEventListener('click', switchColorTheme);\r\n};\r\n\r\nconst switchColorTheme = e => {\r\n\tif (e.target.checked) {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'light');\r\n\t\tmoon.classList.remove('isVisible');\r\n\t\tsun.classList.add('isVisible');\r\n\t} else {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'dark');\r\n\t\tmoon.classList.add('isVisible');\r\n\t\tsun.classList.remove('isVisible');\r\n\t}\r\n};\r\n\r\nexport default changeThemeColorMode;\r\n","const mainContainer = document.querySelector('.container');\r\nconst tilesContainer = document.querySelector('.tiles-grid');\r\nlet margin;\r\nlet width;\r\n\r\nconsole.log(window.innerWidth);\r\n\r\nconst generateTilesGrid = (rows, columns) => {\r\n\ttilesContainer.innerHTML = '';\r\n\tfor (let i = 0; i < columns; i++) {\r\n\t\tfor (let j = 0; j < rows; j++) {\r\n\t\t\tconst tile = document.createElement('li');\r\n\t\t\tif (rows === 4) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\ttile.classList.remove('small-tile');\r\n\t\t\t\ttile.classList.remove('smallest-tile');\r\n\t\t\t\tmargin = 'big';\r\n\t\t\t\tif (window.innerWidth > 1200) {\r\n\t\t\t\t\tif (columns === 3) {\r\n\t\t\t\t\t\twidth = '';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\twidth = '930';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twidth = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (rows === 5) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\ttile.classList.add('small-tile');\r\n\t\t\t\ttile.classList.remove('smallest-tile');\r\n\t\t\t\tmargin = 'medium';\r\n\t\t\t\tif (window.innerWidth > 1200) {\r\n\t\t\t\t\tif (columns === 4) {\r\n\t\t\t\t\t\twidth = '930';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (rows === 6) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\ttile.classList.remove('small-tile');\r\n\t\t\t\ttile.classList.add('smallest-tile');\r\n\t\t\t\tmargin = 'small';\r\n\t\t\t\tif (window.innerWidth > 1200) {\r\n\t\t\t\t\twidth = '800';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttilesContainer.appendChild(tile);\r\n\t\t}\r\n\t}\r\n\tconsole.log(rows);\r\n\ttilesContainer.dataset.gridColumns = columns;\r\n\ttilesContainer.dataset.gridRows = rows;\r\n\ttilesContainer.dataset.marginTiles = margin;\r\n\tmainContainer.dataset.width = width;\r\n};\r\n\r\nexport default generateTilesGrid;\r\n","import generateTilesGrid from './tiles-grid';\r\n\r\nconst radioInputs = document.querySelectorAll('.radios-container__radio-input');\r\n\r\ngenerateTilesGrid(4, 3);\r\n\r\nconst getTilesBoardDimension = () => {\r\n\tconst getRowsAndColumns = e => {\r\n\t\tconst diemensionString = e.target.nextElementSibling.textContent;\r\n\t\tconst boardRows = parseInt(diemensionString.charAt(0));\r\n\t\tconst boardColumns = parseInt(\r\n\t\t\tdiemensionString.charAt(diemensionString.length - 1),\r\n\t\t);\r\n\r\n\t\tif (e.target.checked) {\r\n\t\t\tgenerateTilesGrid(boardRows, boardColumns);\r\n\t\t}\r\n\t};\r\n\r\n\tfor (let i = 0; i < radioInputs.length; i++) {\r\n\t\tradioInputs[i].addEventListener('change', getRowsAndColumns);\r\n\t}\r\n};\r\n\r\nexport default getTilesBoardDimension;\r\n","import changeThemeColorMode from './change-mode';\r\nimport getTilesBoardDimension from './get-rows-and-columns';\r\n\r\ndocument.querySelector('.radios-container__radio').checked = true;\r\n\r\ngetTilesBoardDimension();\r\nchangeThemeColorMode();\r\n\r\n// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\r\n\r\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\r\n// import cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\n// const numbersOfTiles = 20;\r\n\r\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n// \tDOMTilesContainer.classList.add('four-columns');\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}