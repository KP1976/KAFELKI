{"version":3,"sources":["change-mode.js","tiles-grid.js","get-rows-and-columns.js","index.js"],"names":["htmlDOM","document","documentElement","switcher","querySelector","moon","sun","changeThemeColorMode","addEventListener","switchColorTheme","e","target","checked","setAttribute","classList","remove","add","mainContainer","tilesContainer","margin","width","generateTilesGrid","rows","columns","innerHTML","i","j","tile","createElement","appendChild","dataset","gridColumns","marginTiles","radioInputs","querySelectorAll","getTilesBoardDimension","getRowsAndColumns","diemensionString","nextElementSibling","textContent","boardRows","parseInt","charAt","boardColumns","length"],"mappings":";;AGAA;;AACA;;AHDA,ACAA,IDAMA,ACAAiB,ODAO,GAAGhB,GCAG,GAAGA,EDAE,CAACC,KCAK,CAACE,SDA/B,ICAsB,CAAuB,YAAvB,CAAtB;ADCA,AEDA,ADCA,IDAMD,ACAAe,QDAQ,GAAGjB,GCAG,GAAGA,EDAE,CAACG,KCAK,CAACA,ODAf,CAAuB,KCAjB,CAAuB,aAAvB,CAAvB,YDAiB,CAAjB;AACA,AGCAH,AFDA,IDAMI,ACAFc,IDAM,AGCF,CAACf,CFDT,CDAaH,QAAQ,CAACG,EGCtB,CAAuB,UHDV,CAAuB,UAAvB,CAAb,IGCA,EAAmDQ,OAAnD,GAA6D,IAA7D;AHAA,AGEA,AFFA,IDAMN,ACAFc,GDAK,ECAT,CDAYnB,QAAQ,CAACG,aAAT,CAAuB,SAAvB,CAAZ;AGGA,4BAEA;AHHA,AEHA,ADGA,IDAMG,AEHA0B,ADGAZ,WCHW,GAAGpB,GDGG,GDAG,ACAA,ECHE,CFGC,AEHAiC,MDGvBb,GDAAd,OEHc,CAA0B,MDGpB,CAACe,IAAD,CDAG,CCAIC,EDAE,KCAT,EAAmB,UCHzB,CAApB;AFICpB,AEFD,ACKA,AFHCe,EDAAf,ACAAe,QDAQ,CAACV,KCAK,CAACgB,OCFE,CAAlB,CDEC,CDAA,AEFoB,CFEM,AEF3B,CDE4B,EAA3B,IDAA,EAAmCf,gBAAnC;AACA,CAFD;AECA,ADCC,ICDK0B,GDCA,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,ICDO,GAAG,ADC9B,EAA6BE,CAAC,EAA9B,EAAkC,ECD7BU,sBAAyB,GAAM;AFGrC,AEFC,ADCC,IDCI1B,EEFC2B,GDCA,IAAIV,CAAC,GAAG,CAAb,EDCoB,ACDJA,CAAC,EDCM,AEFD,CDCFJ,ECDK,EDCzB,EAA0BI,CAAC,CDCvBjB,CCDJ,ECDK2B,ADC0B,aDCR,CAAA1B,CAAC,EAAI,AEFH,CAAAA,CAAC,EAAI;AFG/B,AEFC,ADCC,MDCEA,CAAC,CAACC,AEFC0B,EDCCV,IDCJ,ACDQ,CDCCf,ECDEX,KDCf,EAAsB,AEFC,CDCA,CAAC2B,CCDElB,CAAC,CAACC,MAAF,CAAS2B,GDCpB,CAAuB,IAAvB,CAAb,SCDwB,CAA4BC,WAArD;AFGAvC,AEFA,IFEAA,IEFMwC,GFEC,CAAC3B,KEFO,GAAG4B,IFElB,CAAqB,GEFK,CAACJ,YFE3B,EAAuC,EEFI,CAACK,IFE5C,EEF2B,CAAwB,CAAxB,CAAD,CAA1B;AFGArC,AEFA,ACMF,AFNG,IDEDA,IAAI,AEFEsC,CFED7B,CCFAQ,IAAI,IDET,CAAeP,ACFD,CCAI,ADAjB,EAAgB,CCAI0B,EFErB,CAAsB,KEFO,CAC5BJ,KFCD,WEDiB,CAACK,MAAjB,CAAwBL,gBAAgB,CAACO,MAAjB,GAA0B,CAAlD,CAD4B,CAA7B;AFGAtC,AGIF,AFNIqB,IDEFrB,GAAG,CAACQ,ACFFa,IAAI,CAACb,IDEP,CAAcE,GAAd,CAAkB,ACFhB,CAAeA,GAAf,CAAmB,MDErB,YCFE;ADGF,AEAA,ACIF,AFNIW,GDFH,KEIKjB,ADFFiB,CDEI,AEAD,CAAChB,EDFA,CAACG,GCEH,CAASF,KDFX,CAAeG,CCEjB,EAAsB,GDFpB,CAAsB,YAAtB;ADGFf,AEAC,ACKH,AFPI2B,IDEF3B,ICFE2B,GDEK,CAACd,ACFF,CAACC,SAAL,CAAeC,CDEjB,CAAqB,ICFnB,CCEiByB,ADFK,SCEvB,EFAD,AEA8BG,EFAS,ECFrC,IDEF,IEAC;AFCDtC,AEAC,ACMH,AFRIc,IDEFd,IAAI,ACFFc,CDEGL,KCFG,GAAG,CDEX,CAAeE,GAAf,ACFE,CDEiB,WAAnB;AACAV,AEAA,ACMF,GDhBC,CFUCA,GAAG,CAACQ,SAAJ,CAAcC,MAAd,CAAqB,WAArB;AACA,AGMF,AFTI,YAAIQ,OAAO,KAAK,CAAhB,EAAmB;ADItB,AEAA,ACOD,AFVKH,CDPL,MEUM,GDHDA,CCGKK,CAAC,GAAG,ADHJ,CCGT,EAAgBA,ADHJ,CCGK,GAAGQ,CDHhB,UCG2B,CAACW,MAAhC,EAAwCnB,CAAC,EAAzC,EAA6C;AAC5CQ,ACOF,AFVK,ICGHA,KDLE,MCKS,ADHF,CCGGR,CAAD,CAAX,CAAejB,gBAAf,CAAgC,QAAhC,EAA0C4B,iBAA1C;AACA,ACOF,AFVKhB,UAAAA,KDGUb,ACHL,GAAG,KAAR;ACIJ,ACOD,AFVK,CCbL;ACyBA,AFXI;AEYJ,eDRe4B;ACSf,AFZG,UAAIb,IAAI,KAAK,CAAb,EAAgB;AEanB,AFZIK,QAAAA,IAAI,CAACb,SAAL,CAAeE,GAAf,CAAmB,kBAAnB;AEaJ,AFZIW,QAAAA,IAAI,CAACb,SAAL,CAAeE,GAAf,CAAmB,YAAnB;AEaJ,AFZIW,QAAAA,IAAI,CAACb,SAAL,CAAeC,MAAf,CAAsB,eAAtB;AEaJ,AFZII,QAAAA,MAAM,GAAG,QAAT;AEcJ,AFbI;AEcJ;AACA,AFdG,UAAIG,IAAI,KAAK,CAAb,EAAgB;AEenB,AFdIK,QAAAA,IAAI,CAACb,SAAL,CAAeE,GAAf,CAAmB,kBAAnB;AEgBJ,AFfIW,QAAAA,IAAI,CAACb,SAAL,CAAeC,MAAf,CAAsB,YAAtB;AEgBJ,AFfIY,QAAAA,IAAI,CAACb,SAAL,CAAeE,GAAf,CAAmB,eAAnB;AEgBJ,AFfIG,QAAAA,MAAM,GAAG,OAAT;AEgBJ,AFfI;AEgBJ;AACA,AFhBGD,MAAAA,cAAc,CAACW,WAAf,CAA2BF,IAA3B;AEiBH,AFhBG;AEkBH,AFjBE;AEmBF;AACA,AFnBCT,EAAAA,cAAc,CAACY,OAAf,CAAuBC,WAAvB,GAAqCR,OAArC;AEoBD,AFnBCL,EAAAA,cAAc,CAACY,OAAf,CAAuBE,WAAvB,GAAqCb,MAArC;AEoBD,AFnBCF,EAAAA,aAAa,CAACa,OAAd,CAAsBV,KAAtB,GAA8BA,KAA9B;AEoBD,AFnBC,CAlCD;AEsDA;AACA,eFnBeC;AEoBf;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const htmlDOM = document.documentElement;\r\nconst switcher = document.querySelector('.switch-mode-container__switch');\r\nconst moon = document.querySelector('.fa-moon');\r\nconst sun = document.querySelector('.fa-sun');\r\n\r\nconst changeThemeColorMode = () => {\r\n\tswitcher.addEventListener('click', switchColorTheme);\r\n};\r\n\r\nconst switchColorTheme = e => {\r\n\tif (e.target.checked) {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'light');\r\n\t\tmoon.classList.remove('isVisible');\r\n\t\tsun.classList.add('isVisible');\r\n\t} else {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'dark');\r\n\t\tmoon.classList.add('isVisible');\r\n\t\tsun.classList.remove('isVisible');\r\n\t}\r\n};\r\n\r\nexport default changeThemeColorMode;\r\n","const mainContainer = document.querySelector('.container');\r\nconst tilesContainer = document.querySelector('.tiles-grid');\r\nlet margin;\r\nlet width;\r\n\r\nconst generateTilesGrid = (rows, columns) => {\r\n\ttilesContainer.innerHTML = '';\r\n\tfor (let i = 0; i < columns; i++) {\r\n\t\tfor (let j = 0; j < rows; j++) {\r\n\t\t\tconst tile = document.createElement('li');\r\n\t\t\tif (rows === 4) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\ttile.classList.remove('small-tile');\r\n\t\t\t\ttile.classList.remove('smallest-tile');\r\n\t\t\t\tmargin = 'big';\r\n\t\t\t\tif (columns === 3) {\r\n\t\t\t\t\twidth = '800';\r\n\t\t\t\t} else {\r\n\t\t\t\t\twidth = '930';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (rows === 5) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\ttile.classList.add('small-tile');\r\n\t\t\t\ttile.classList.remove('smallest-tile');\r\n\t\t\t\tmargin = 'medium';\r\n\t\t\t}\r\n\t\t\tif (rows === 6) {\r\n\t\t\t\ttile.classList.add('tiles-grid__tile');\r\n\t\t\t\ttile.classList.remove('small-tile');\r\n\t\t\t\ttile.classList.add('smallest-tile');\r\n\t\t\t\tmargin = 'small';\r\n\t\t\t}\r\n\t\t\ttilesContainer.appendChild(tile);\r\n\t\t}\r\n\t}\r\n\ttilesContainer.dataset.gridColumns = columns;\r\n\ttilesContainer.dataset.marginTiles = margin;\r\n\tmainContainer.dataset.width = width;\r\n};\r\n\r\nexport default generateTilesGrid;\r\n","import generateTilesGrid from './tiles-grid';\r\n\r\nconst radioInputs = document.querySelectorAll('.radios-container__radio-input');\r\n\r\ngenerateTilesGrid(4, 3);\r\n\r\nconst getTilesBoardDimension = () => {\r\n\tconst getRowsAndColumns = e => {\r\n\t\tconst diemensionString = e.target.nextElementSibling.textContent;\r\n\t\tconst boardRows = parseInt(diemensionString.charAt(0));\r\n\t\tconst boardColumns = parseInt(\r\n\t\t\tdiemensionString.charAt(diemensionString.length - 1),\r\n\t\t);\r\n\r\n\t\tif (e.target.checked) {\r\n\t\t\tgenerateTilesGrid(boardRows, boardColumns);\r\n\t\t}\r\n\t};\r\n\r\n\tfor (let i = 0; i < radioInputs.length; i++) {\r\n\t\tradioInputs[i].addEventListener('change', getRowsAndColumns);\r\n\t}\r\n};\r\n\r\nexport default getTilesBoardDimension;\r\n","import changeThemeColorMode from './change-mode';\r\nimport getTilesBoardDimension from './get-rows-and-columns';\r\n\r\ndocument.querySelector('.radios-container__radio').checked = true;\r\n\r\ngetTilesBoardDimension();\r\nchangeThemeColorMode();\r\n\r\n// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\r\n\r\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\r\n// import cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\n// const numbersOfTiles = 20;\r\n\r\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n// \tDOMTilesContainer.classList.add('four-columns');\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}