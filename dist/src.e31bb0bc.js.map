{"version":3,"sources":["change-mode.js","index.js"],"names":["htmlDOM","document","documentElement","switcher","querySelector","changeThemeColorMode","addEventListener","switchColorTheme","e","target","checked","setAttribute"],"mappings":";;ACAA;;;;ADAA,ACEA,IDFMA,OAAO,GAAGC,QAAQ,CAACC,KCIzB,UDJA;AACA,IAAMC,QAAQ,GAAGF,QAAQ,CAACG,aAAT,CAAuB,gCAAvB,CAAjB;ACIA;ADFA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAClCF,EAAAA,QAAQ,CAACG,gBAAT,CAA0B,OAA1B,EAAmCC,gBAAnC;AACA,CAFD;;AAIA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,CAAC,EAAI;AAC7B,ACID,MDJKA,CAAC,CAACC,MAAF,CAASC,OAAb,EAAsB;AACrBV,ACIF,IDJEA,OAAO,CAACW,YAAR,CAAqB,gBAArB,EAAuC,OAAvC;AACA,ACIF,GDNC,MAEO;AACNX,ACKF,IDLEA,OAAO,CAACW,YAAR,CAAqB,gBAArB,EAAuC,MAAvC;AACA,ACMF;ADLC,ACMD,CDZA;ACaA;AAEA,eDPeN;ACQf;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const htmlDOM = document.documentElement;\r\nconst switcher = document.querySelector('.switch-mode-container__switch');\r\n\r\nconst changeThemeColorMode = () => {\r\n\tswitcher.addEventListener('click', switchColorTheme);\r\n};\r\n\r\nconst switchColorTheme = e => {\r\n\tif (e.target.checked) {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'light');\r\n\t} else {\r\n\t\thtmlDOM.setAttribute('data-colormode', 'dark');\r\n\t}\r\n};\r\n\r\nexport default changeThemeColorMode;\r\n","import changeThemeColorMode from './change-mode';\r\n\r\nchangeThemeColorMode();\r\n\r\n// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\r\n\r\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\r\n// import cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\n// const numbersOfTiles = 20;\r\n\r\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n// \tDOMTilesContainer.classList.add('four-columns');\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}