{"version":3,"sources":["change-mode.js","index.js"],"names":["body","document","querySelector","startButton","radioLabels","querySelectorAll","radioBoxes","switcher","titles","isCheckedFonts","moonFont","sunFont","console","log","length","switchColorTheme","addEventListener","i","classList","toggle","title"],"mappings":";;ACAA;;;;ADAA,ACEA,IDFMA,IAAI,GAAGC,QAAQ,CAACC,QCItB,KDJa,CAAuB,MAAvB,CAAb;AACA,IAAMC,WAAW,GAAGF,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAApB;AACA,ACGA,IDHME,WAAW,GAAGH,QAAQ,CAACI,gBAAT,CAA0B,gCAA1B,CAApB;AACA,IAAMC,UAAU,GAAGL,QAAQ,CAACI,gBAAT,CAA0B,8BAA1B,CAAnB;AACA,IAAME,QAAQ,GAAGN,QAAQ,CAACC,aAAT,CAAuB,gCAAvB,CAAjB;AACA,IAAMM,MAAM,GAAGP,QAAQ,CAACI,gBAAT,CAA0B,QAA1B,CAAf;AACA,IAAMI,cAAc,GAAGR,QAAQ,CAACI,gBAAT,CAA0B,WAA1B,CAAvB;AACA,IAAMK,QAAQ,GAAGT,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACA,ACIA,IDJMS,OAAO,GAAGV,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAhB;AAEAU,ACGA,ODHO,CAACC,GAAR,CAAYT,WAAW,CAACU,MAAxB,EAAgCR,UAAU,CAACQ,MAA3C,EAAmDL,cAAc,CAACK,MAAlE;ACIA;ADFA,ACIA,IDJMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9BR,ACKD,EDLCA,QAAQ,CAACS,gBAAT,CAA0B,OAA1B,EAAmC,YAAW;AAC7C,ACKF,SDLO,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,WAAW,CAACU,MAAhC,EAAwCG,CAAC,EAAzC,EAA6C;AAC5Cb,ACKH,MDLGA,WAAW,CAACa,CAAD,CAAX,CAAeC,SAAf,CAAyBC,MAAzB,CAAgC,YAAhC;AACAb,ACMH,MDNGA,UAAU,CAACW,CAAD,CAAV,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,YAA/B;AACAV,ACMH,MDNGA,cAAc,CAACQ,CAAD,CAAd,CAAkBC,SAAlB,CAA4BC,MAA5B,CAAmC,YAAnC;AACA,ACMH;AACA;ADNEnB,ACQF,IDREA,IAAI,CAACkB,SAAL,CAAeC,MAAf,CAAsB,YAAtB;AACAhB,ACQF,IDREA,WAAW,CAACe,SAAZ,CAAsBC,MAAtB,CAA6B,YAA7B;AAP6C,ACgB/C;ADhB+C,ACiB/C;ADjB+C,ACkB/C;AACA;ADnB+C,ACoB/C;ADZE,ACcF,2BDdoBX,MAAlB,8HAA0B;AAAA,ACe5B,YDfWY,KAAiB;AACzBA,ACeH,QDfGA,KAAK,CAACF,SAAN,CAAgBC,MAAhB,CAAuB,YAAvB;AACA,ACeH;ADzB+C,AC2B/C;AD3B+C,AC4B/C;AD5B+C,AC6B/C;AD7B+C,AC8B/C;AD9B+C,AC+B/C;AD/B+C,ACgC/C;ADhC+C,ACiC/C;ADjC+C,ACmC/C;ADnC+C,ACqC/C;ADrC+C,ACsC/C;ADtC+C,ACuC/C;ADvC+C,ACwC/C;ADxC+C,ACyC/C;ADzC+C,AC0C/C;AACA;ADhCET,ACiCF,IDjCEA,QAAQ,CAACQ,SAAT,CAAmBC,MAAnB,CAA0B,WAA1B;AACAR,ACiCF,IDjCEA,OAAO,CAACO,SAAR,CAAkBC,MAAlB,CAAyB,WAAzB;AACA,ACkCF,GD/CC;AAcA,ACkCD,CDjDA;ACkDA;AACA,eDlCeJ;ACmCf;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const body = document.querySelector('body');\r\nconst startButton = document.querySelector('.button');\r\nconst radioLabels = document.querySelectorAll('.radios-container__radio-label');\r\nconst radioBoxes = document.querySelectorAll('.radios-container__radio-box');\r\nconst switcher = document.querySelector('.switch-mode-container__switch');\r\nconst titles = document.querySelectorAll('.title');\r\nconst isCheckedFonts = document.querySelectorAll('.fa-check');\r\nconst moonFont = document.querySelector('.fa-moon');\r\nconst sunFont = document.querySelector('.fa-sun');\r\n\r\nconsole.log(radioLabels.length, radioBoxes.length, isCheckedFonts.length);\r\n\r\nconst switchColorTheme = () => {\r\n\tswitcher.addEventListener('click', function() {\r\n\t\tfor (let i = 0; i < radioLabels.length; i++) {\r\n\t\t\tradioLabels[i].classList.toggle('light-mode');\r\n\t\t\tradioBoxes[i].classList.toggle('light-mode');\r\n\t\t\tisCheckedFonts[i].classList.toggle('light-mode');\r\n\t\t}\r\n\t\tbody.classList.toggle('light-mode');\r\n\t\tstartButton.classList.toggle('light-mode');\r\n\t\tfor (let title of titles) {\r\n\t\t\ttitle.classList.toggle('light-mode');\r\n\t\t}\r\n\t\tmoonFont.classList.toggle('isVisible');\r\n\t\tsunFont.classList.toggle('isVisible');\r\n\t});\r\n};\r\n\r\nexport default switchColorTheme;\r\n","import switchColorTheme from './change-mode';\r\n\r\nswitchColorTheme();\r\n\r\n// DO ZROBIENIA\r\n/*\r\n\t1. Plansza startowa, gdzie mamy do wyboru 4 plansze: 4 x 3, 4 x 4, 6 x 3 i 5 x 4 (rząd x kolumna).\r\n\t2. Po wybraniu rodzaju planszy generowanie odpowiedniej liczby kafelków.\r\n\t3. Losowe przydzielanie koloru do połowy liczby kafelków.\r\n\t4. Pojawienie się kolorowej planszy na 3 sekundy po czym wszystkie stają  się szare.\r\n*/\r\n\r\n// import { generateTiles, DOMTilesContainer } from './create_tiles';\r\n// import cssVariables from './varaibles_from_css';\r\n// import randomNumbers from './random_numbers';\r\n\r\n// const numbersOfTiles = 20;\r\n\r\n// if (numbersOfTiles === 12 || numbersOfTiles === 18) {\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// if (numbersOfTiles === 16 || numbersOfTiles === 20) {\r\n// \tDOMTilesContainer.classList.add('four-columns');\r\n// \tgenerateTiles(numbersOfTiles);\r\n// }\r\n\r\n// class Tile {\r\n// \tconstructor(lightColor, shadowColor, isClicked) {\r\n// \t\tthis.lightColor = lightColor;\r\n// \t\tthis.shadowColor = shadowColor;\r\n// \t\tthis.isClicked = isClicked;\r\n// \t}\r\n// }\r\n\r\n// const cssVariablesColors = {};\r\n// let tilesColorsValues = [];\r\n// const allTiles = {};\r\n// let j = 0;\r\n\r\n// for (let i = 0; i < cssVariables.length; i++) {\r\n// \tlet keyValuePairs = cssVariables[i].split(':');\r\n// \ttilesColorsValues[i] = cssVariables[i].slice(-7);\r\n// \tif (keyValuePairs[0] !== '') {\r\n// \t\tcssVariablesColors[keyValuePairs[0].trim()] = keyValuePairs[1].trim();\r\n// \t}\r\n// }\r\n\r\n// const hexColorsNames = Object.keys(cssVariablesColors);\r\n\r\n// for (let i = 0; i < cssVariables.length / 2; i++) {\r\n// \tconst colorName = hexColorsNames[j].slice(2).slice(0, -6);\r\n// \tallTiles[colorName] = new Tile(\r\n// \t\ttilesColorsValues[j],\r\n// \t\ttilesColorsValues[j + 1],\r\n// \t\tfalse,\r\n// \t);\r\n// \tj += 2;\r\n// }\r\n\r\n// const removeColorsFromTiles = () => {\r\n// \tsetTimeout(() => {\r\n// \t\tfor (let i = 0; i < DOMTiles.length; i++) {\r\n// \t\t\tDOMTiles[i].classList = 'tiles-container__tile';\r\n// \t\t}\r\n// \t}, 2000);\r\n// };\r\n\r\n// j = 0;\r\n// for (let i = 0; i < DOMTiles.length; i++) {\r\n// \tDOMTiles[[...randomNumbers][i]].classList.add(Object.keys(allTiles)[j]);\r\n// \tj++;\r\n// \tif (j > 5) {\r\n// \t\tj = 0;\r\n// \t}\r\n// }\r\n\r\n// removeColorsFromTiles();\r\n"]}